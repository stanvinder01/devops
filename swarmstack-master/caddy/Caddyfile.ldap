:80 {

  log / stdout "{combined}"
  errors stderr

  prometheus 0.0.0.0:9180 {
    hostname 80
  }

  tls off

  redir https://{hostonly}{uri}
}

{$CADDY_URL}:443 {

  log / stdout "{combined}"
  errors stderr

  prometheus 0.0.0.0:9180 {
    hostname 443
  }

  tls {$CADDY_CERT}

  reauth {
    path /
    ldap url=ldaps://ldap.example.com:636,insecure=true,timeout=5s,username=ldap_binduser,password=ldap_bindpw,base="o=example.com",filter="(&(memberOf=CN=some_group,OU=groups,O=example.com)(objectClass=user)(uid=%s))"
  }

  root /www
}

{$CADDY_URL}:3000 {

  log / stdout "{combined}"
  errors stderr

  prometheus 0.0.0.0:9180 {
    hostname 3000
  }

  tls {$CADDY_CERT}

  proxy / grafana:3000 {
    transparent
    websocket
  }
}

{$CADDY_URL}:9000 {

  log / stdout "{combined}"
  errors stderr

  # Disable prometheus module due to https://github.com/miekg/caddy-prometheus/issues/43
  #prometheus 0.0.0.0:9180 {
  #  hostname 9000
  #}

  tls {$CADDY_CERT} {
    alpn http/1.1
  }

  proxy / portainer:9000 {
    transparent
    websocket
  }
}

{$CADDY_URL}:9090 {

  log / stdout "{combined}"
  errors stderr

  prometheus 0.0.0.0:9180 {
    hostname 9090
  }

  tls {$CADDY_CERT}

  reauth {
    path /
    ldap url=ldaps://ldap.example.com:636,insecure=true,timeout=5s,username=ldap_binduser,password=ldap_bindpw,base="o=example.com",filter="(&(memberOf=CN=some_group,OU=groups,O=example.com)(objectClass=user)(uid=%s))"
  }

  proxy / prometheus:9090 {
    transparent
  }
}

{$CADDY_URL}:9091 {

  log / stdout "{combined}"
  errors stderr

  prometheus 0.0.0.0:9180 {
    hostname 9091
  }

  tls {$CADDY_CERT}

  basicauth /metrics/job/ {$PUSH_USER} {$PUSH_PASSWORD}
  proxy /metrics/job/ pushgateway:9091 {
    transparent
  }

  reauth {
    path /
    except /metrics/job/
    ldap url=ldaps://ldap.example.com:636,insecure=true,timeout=5s,username=ldap_binduser,password=ldap_bindpw,base="o=example.com",filter="(&(memberOf=CN=some_group,OU=groups,O=example.com)(objectClass=user)(uid=%s))"
  }

  proxy / pushgateway:9091 {
    transparent
  }
}

{$CADDY_URL}:9093 {

  log / stdout "{combined}"
  errors stderr

  prometheus 0.0.0.0:9180 {
    hostname 9093
  }

  tls {$CADDY_CERT}

  reauth {
    path /
    ldap url=ldaps://ldap.example.com:636,insecure=true,timeout=5s,username=ldap_binduser,password=ldap_bindpw,base="o=example.com",filter="(&(memberOf=CN=some_group,OU=groups,O=example.com)(objectClass=user)(uid=%s))"
  }

  proxy / alertmanager:9093 {
    transparent
  }
}

{$CADDY_URL}:9094 {

  log / stdout "{combined}"
  errors stderr

  prometheus 0.0.0.0:9180 {
    hostname 9094
  }

  tls {$CADDY_CERT}

  reauth {
    path /
    ldap url=ldaps://ldap.example.com:636,insecure=true,timeout=5s,username=ldap_binduser,password=ldap_bindpw,base="o=example.com",filter="(&(memberOf=CN=some_group,OU=groups,O=example.com)(objectClass=user)(uid=%s))"
  }

  proxy / karma:8080 {
    transparent
  }
}

{$CADDY_URL}:9095 {

  log / stdout "{combined}"
  errors stderr

  prometheus 0.0.0.0:9180 {
    hostname 9095
  }

  tls {$CADDY_CERT}

  reauth {
    path /
    ldap url=ldaps://ldap.example.com:636,insecure=true,timeout=5s,username=ldap_binduser,password=ldap_bindpw,base="o=example.com",filter="(&(memberOf=CN=some_group,OU=groups,O=example.com)(objectClass=user)(uid=%s))"
  }

  proxy / alertmanagerB:9093 {
    transparent
  }
}

{$CADDY_URL}:19999 {

  log / stdout "{combined}"
  errors stderr

  prometheus 0.0.0.0:9180 {
    hostname 19999
  }

  tls {$CADDY_CERT}

  reauth {
    path /
    ldap url=ldaps://ldap.example.com:636,insecure=true,timeout=5s,username=ldap_binduser,password=ldap_bindpw,base="o=example.com",filter="(&(memberOf=CN=some_group,OU=groups,O=example.com)(objectClass=user)(uid=%s))"
  }

##SWARMSTACK MARKER

# Examples of adding addititional NetData hosts:
#
#  proxy /swarmhost1 swarmhost1:19999/ {
#    without /swarmhost1
#    transparent
#  }
#
#  proxy /swarmhost2 swarmhost2:19999/ {
#    without /swarmhost2
#    transparent
#  }
#
#  proxy /swarmhost3 swarmhost3:19999/ {
#    without /swarmhost3
#    transparent
#  }

}
