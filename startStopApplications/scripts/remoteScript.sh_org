#!/bin/bash
ARG_APPLICATION_TYPE=${ARG_APPLICATION_TYPE}
ARG_ACTION=${ARG_ACTION}

cat <<EOF
Kidaan vai tanvinder.....
ARG_APPLICATION_TYPE=${ARG_APPLICATION_TYPE}
ARG_ACTION=${ARG_ACTION}
EOF

stopProxyCMD(){
sudo service httpd stop 
}
                                         
stopProxy() {
G_RESULT=`checkIfHTTPDIsRunning`
if [[ ${G_RESULT} -gt 0 ]]; then
echo "Going to Stop HTTPD Service"
else
echo "HTTPD Service is already Stopped"
fi

}

startProxyCMD(){
sudo service httpd start 
}

startProxy() {
G_RESULT=`checkIfHTTPDIsRunning`
if [[ ${G_RESULT} -gt 0 ]]; then
echo "HTTPD Service is already Started"
else
echo "Going to Start HTTPD Service"

fi

}

restartProxy(){
stopProxy
startProxy
}

checkIfHTTPDIsRunning(){
local l_count=`ps -ef | grep httpd | grep -v grep | wc -l`
echo ${l_count}
}

stopTomcatCMD(){
sudo service tomcat stop
}

stopTomcat(){
 G_RESULT=`checkIfTomcatIsRunning`
 echo "G_RESULT===${G_RESULT}"
  if [[ ${G_RESULT} -gt 0 ]]; then
	echo "Going to Stop Tomcat Service"
	#stopTomcatCMD
  else
   echo "Tomcat Service is already Stopped"
  fi
}

startTomcatCMD(){
sudo service tomcat start
}



startTomcat(){
G_RESULT=`checkIfTomcatIsRunning`
 echo "G_RESULT===${G_RESULT}"
  if [[ ${G_RESULT} -gt 0 ]]; then
	echo "Tomcat Service is already running"
  else
   echo "Gonging to Start Tomcat Service"
  fi
}

restartTomcat(){
stopTomcat
startTomcat
} 

checkIfTomcatIsRunning(){
local l_count=`ps -ef | grep /usr/share/apache-tomcat | grep -v grep | wc -l`
echo ${l_count}
}

stopSchedulerCMD(){
cd /opt/msb-scheduler/bin
#sudo sh scheduler.sh stop
}

stopScheduler(){
 G_RESULT=`checkIfSchedulerIsRunning`
 echo "G_RESULT===${G_RESULT}"
  if [[ ${G_RESULT} -gt 0 ]]; then
	echo "Going to Stop Scheduler Service"
	#stopSchedulerCMD
  else
   echo "Scheduler Service is already Stopped"
  fi
}

startSchedulerCMD(){
cd /opt/msb-scheduler/bin
#sudo sh scheduler.sh start
}



startScheduler(){
G_RESULT=`checkIfSchedulerIsRunning`
 echo "G_RESULT===${G_RESULT}"
  if [[ ${G_RESULT} -gt 0 ]]; then
	echo "Scheduler Service is already running"
  else
   echo "Going to Start Scheduler Service"
  fi
}

restartScheduler(){
stopScheduler
startScheduler
} 

checkIfSchedulerIsRunning(){
local l_count=`ps -ef | grep /opt/msb-scheduler | grep -v grep | wc -l`
echo ${l_count}
}

stopMysqlCMD(){
sudo service mysqld stop 
}
                                         
stopMysql() {
G_RESULT=`checkIfMYSQLDIsRunning`
if [[ ${G_RESULT} -gt 0 ]]; then
echo "Going to Stop MYSQLD Service"
else
echo "MYSQLD Service is already Stopped"
fi

}


startMysqlCMD(){
sudo service mysqld start 
}

startMysql() {
G_RESULT=`checkIfMYSQLIsRunning`
if [[ ${G_RESULT} -gt 0 ]]; then
echo "MYSQLD Service is already Started"
else
echo "Going to Start MYSQLD Service"

fi

}


restartMysql(){
stopMysql
startMysql
}

checkIfMysqlIsRunning(){
local l_count=`ps -ef | grep mysqld | grep -v grep | wc -l`
echo ${l_count}
}

##############################################################################
#MAIN                                                                        #
############################################################################## 

if [[ ${ARG_APPLICATION_TYPE} == "PROXY" && ${ARG_ACTION} == "STOP" ]]; then
stopProxy
fi

if [[ ${ARG_APPLICATION_TYPE} == "PROXY" && ${ARG_ACTION} == "START" ]]; then
startProxy
fi

if [[ ${ARG_APPLICATION_TYPE} == "PROXY" && ${ARG_ACTION} == "RESTART" ]]; then
restartProxy
fi

if [[ ${ARG_APPLICATION_TYPE} == "TOMCAT" && ${ARG_ACTION} == "STOP" ]]; then
stopTomcat
fi

if [[ ${ARG_APPLICATION_TYPE} == "TOMCAT" && ${ARG_ACTION} == "START" ]]; then
startTomcat
fi

if [[ ${ARG_APPLICATION_TYPE} == "TOMCAT" && ${ARG_ACTION} == "RESTART" ]]; then
restartTomcat
fi

if [[ ${ARG_APPLICATION_TYPE} == "SCH" && ${ARG_ACTION} == "STOP" ]]; then
stopScheduler
fi

if [[ ${ARG_APPLICATION_TYPE} == "SCH" && ${ARG_ACTION} == "START" ]]; then
startScheduler
fi

if [[ ${ARG_APPLICATION_TYPE} == "SCH" && ${ARG_ACTION} == "RESTART" ]]; then
restartScheduler
fi

if [[ ${ARG_APPLICATION_TYPE} == "MYSQLD" && ${ARG_ACTION} == "STOP" ]]; then
stopMysql
fi

if [[ ${ARG_APPLICATION_TYPE} == "MYSQLD" && ${ARG_ACTION} == "START" ]]; then
startMysql
fi

if [[ ${ARG_APPLICATION_TYPE} == "MYSQL" && ${ARG_ACTION} == "RESTART" ]]; then
restartMysql
fi
